#!/bin/bash
# postinst script for jupiter
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
      if [ ! "$(grep jupiter /etc/group)" ]; then
        echo "Adding Jupiter group"
        /usr/sbin/groupadd jupiter
      fi
      #echo -n "Adding users to Jupiter group: "
      #for i in $(awk -F: '$6 ~ /\/home/ && $3 >= 1000 {print $1}' /etc/passwd);
      #do
      #  echo -n $i" "
      #  usermod -G jupiter -a $i 2>&1 >/dev/null ||:
      #done
      echo "Setting permissions.."
      chown -R root:jupiter /usr/lib/jupiter
      #chown -R root:root /etc/acpi/events

      if [ ! -d "/var/jupiter" ]; then
        mkdir /var/jupiter
      fi

      if [ -d "/var/jupiter" ]; then
       	chown -R root:jupiter /var/jupiter
        chmod -R 775 /var/jupiter
      	chmod  ug+s /var/jupiter
       	setfacl -Rm g:jupiter:rwX,d:g:jupiter:rwX /var/jupiter
      fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
